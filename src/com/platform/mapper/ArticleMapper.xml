<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.platform.entity.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="comment_count" property="commentCount" jdbcType="INTEGER" />
    <result column="like_count" property="likeCount" jdbcType="INTEGER" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="url" property="url" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.platform.entity.Article" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, author, title, introduction, comment_count, like_count, read_count, time, 
    url
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.platform.entity.Article" >
    insert into article (id, uid, author, 
      title, introduction, comment_count, 
      like_count, read_count, time, 
      url, content)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{commentCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{url,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.platform.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="commentCount != null" >
        comment_count,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.entity.Article" >
    update article
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null" >
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.platform.entity.Article" >
    update article
    set uid = #{uid,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.entity.Article" >
    update article
    set uid = #{uid,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <select id="getArticleCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1)
    from article
    where uid = #{0}
  </select>



  <select id="getArticleLikeCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1)
    from article_likes
    where uid = #{0}
  </select>


  <select id="searchArticle" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article
    where 1 = 0
    <if test="_parameter != null">
      <foreach item="item" index="index" collection="_parameter.split(' ')">
        OR LOCATE(#{item} , title)
        OR LOCATE(#{item} , introduction)
        OR LOCATE(#{item} , content)
      </foreach>
    </if>
  </select>


  <update id="updateReadCount" parameterType="java.lang.Integer">
    update article
    set read_count = read_count + 1
    where id = #{0}
  </update>

  <update id="updateCommentCount" parameterType="java.lang.Integer">
    update article
    set comment_count =
    (select count(*) from comment
    where article.id = comment.aid)
    where article.id = #{0}
  </update>

  <update id="updatelikeCount" parameterType="java.lang.Integer">
    update article
    set like_count =
    (select count(*) from article_likes
    where article.id = article_likes.aid)
    where article.id = #{0}
  </update>


  <select id="getArticleList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article
    order by time desc
    limit #{0} , 5
  </select>



  <select id="getArticleTableInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article
  </select>

</mapper>